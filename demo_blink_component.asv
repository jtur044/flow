

%% define output files 

%% Saaed
%% !ffmpeg -y -i eye0.mp4 -filter:v fps=30 eye0.reduced.mp4

%inputVideo      = './data/Saaed/eye0.reduced.mp4';
%outputVideo     = './data/Saaed/clip0.result.mp4';
%outputDataFile  = './data/Saaed/clip0.result.csv';


%% j_kau 
inputVideo      = './data/j_kau/eye0.reduced.mp4';
outputVideo     = './data/j_kau/clip0.result.mp4';
outputDataFile  = './data/j_kau/clip0.result.csv';

%% j_kau_3
inputVideo      = './data/j_kau/eye0.reduced.mp4';
outputVideo     = './data/j_kau/clip0.result.mp4';
outputDataFile  = './data/j_kau/clip0.result.csv';


blinks = [ 0, 100 ];
dataTable = readtable (outputDataFile);
figure(1); clf;
show_flowalyzer_result (dataTable, 'tile-6');


figure(2); clf;
dataTable = filterbycolumn (dataTable, 'name', 'out-0-V');  %% same as global

yyaxis left;
M = size (blinks, 1);
for k = 1:M
    i = arrayfun( @(x) ((blinks(k,1) < x) && (x < blinks(k,2))), dataTable.CurrentTime);
    eachTable = dataTable (i, :);
    plot(eachTable.CurrentTime, eachTable.Vx, 'LineWidth', 1.5);
end    

xlabel ('Time (seconds)');
ylabel ('Horizontal velocity');

yyaxis right;
%% detect Blink Like features 
fps = 30;
T   = 1; sigma = T/5;  %% 4 standard 
t0  = linspace(-T/2,T/2,T*fps); 
f   = wavepacket (t0,T,sigma);

%% correction information
t  = eachTable.CurrentTime;
Vx = eachTable.Vx;
[c0, lags] = xcorr (Vx, f);
i  = (lags >= 0);
c  = c0(i);

%% Add a half temp[late cycle correction 
floor(length(f)/2);

%% should pad this by half the template length

plot (t, c);
ylabel ('Cross-correlation');
set(gca, 'FontSize', 20);
grid on;


print(gcf, '-dpng', './figures/figure-blink-example.png');